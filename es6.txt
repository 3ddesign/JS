транспайлер - преобразовут код в es5 например traceur или babel
полифил - имитация при помощи js недостающую функциональность



https://google.github.io/traceur-compiler/demo/repl.html

let: не видно за функцией (локальная область видимости) поднятие переменных не работает

const: нельзя поменять после объявления Object.freeze?

деструктуризация:
let person = { firstname = "ivan";
lastname = "ivanov";}
let { firstname = fn;
lastname = "ln; } = person;

import и export

параметры по умолчанию:
было: functuion op1(value) {value  = value || "hw!";}
стало: functuion op1(value  = "hw!") {}

rest параметры:
function op1(name, ...values){}
все что после ...  записывается в функцию в виде массива, если не знаем сколько этих параметров должно прийти

spread operator(оператор распостранения):
var arr = [1,2,3];
test(...arr); - расщипляем на значения
arr2 = [2,45,5 ...arr, 2,4]

templates(шаблоны):
var firstname = "ivan";
var age = 20;
var res = `hello my name is ${firstname} i am ${age} old`;

Классы:
было: function p1(){this...}
стало: class {
mymethod(){}
constructor(){this._name = name;}
}

Наследование:
class myclass extends myclass{}
super(name) вызов ро дительского конструктора

Функциональное программирование:
++++++++++++++++++++++++++++++++
arrow function:
var add = (x,y) => x + y; (=> заменяет return)
for(let val of numbers ){sum += val;}
let newArr = arr.map((el) => el.toUpperCase()); - callback для каждого элемента массива


модули:(можно скарывать реализацию в модулях и давать доступ через export)
через export class my{} можно сделать доступным класс my
вставить import {my} from "/ moduls/mymodule.js"

AJAX:
promise:
deffered:



AJAX ES6:




'use strict' - директива контролирующая соблюдение современных стандартов написания кода
Бесконечность: while(true) или for(;;) или while(1)
Литерал - значение переменной (функция литерал - функция в переменной(без названия))
Инициализация - заполнение переменной данными
== - равенство
=== - идентичность
++a - постинкремент
a++ - префиксный инкремент (до перевода на новую строку)
конюнкция - "и" 11=1,01=0,10=0,00=0
дизюнкция - "или" 11=1,01=1,10=1,00=0
модальность - выполнение только одной данной функции в конкретный момент
Ассоциативный массив (Hash или словарь), где данные хранятся по произвольному ключу.
Числовой массив Array, где данные хранятся по номерам.
Функция - возвращает результат
Процедура - не возвращает результат
переменная без var - всегда глобальная переменная
callBackFunction - функция которая вкладывается в другую функцию как аргумент
Объект - составной тип данных (имеет свойства(переменные) и методы(функции) )
Объекты - 1.Являются ассоциативными массивами. 2. Обладают свойствами и поведением.
Типы данных: элементарные: number,stirng,bool Тривиальные: null, undefined Специальные: function Составные: object, array
Функции, которые применяются совместно с оператором new называются функциями-конструкторами.
Метод - Функуия в свойстве объекта (обект(переменная(функция)))

Twitter Bootstrap – это css фреймворк, свободный набор инструментов для создания сайтов и веб-приложений.
Адаптивный дизайн — дизайн обеспечивающий правильное отображение сайта на различных устройствах
и динамически подстраивающийся под заданные размеры окна браузера.
(DOM) – объектная модель документа – структура объектов представляющая загруженный HTML или XML контент и позволяющая манипулировать этим контентом.
Квантификатор - количество символов +, *, ?;
DHTML = CSS+HTML+JS
position: absolute = не зависит от элементов, устанавливается относильтельно отступа от экрана
          fixed = стот на месте при скролинге
          relativ = относильтено элемента рядом с которым находится
z-index: 3 выше, 2 ниже
!! - делает тип bool

GET - Получение данных с сервера (браузер обращается к сайту с запросом get request)
POST - Отправка данных на сервер. Обычно с формы
JSON - объект возвращается c сервера и легко переводится в js код
Атомарная операция выполняется полностью , без прерываний.
Функциональное программирование:
Замыкание - функция, в которой находятся переменные объявленные в не тела этой функции.
Мемоизация - прием кэширования результатов функции.
Каррирование – процесс преобразования функции от многих аргументов в функцию, берущую аргументы по одному.
Минификация - удаление лишнего из кода (код становится не читаемым)
Mockup или mock-up (макет) — неработающая модель, выполненная в натуральную величину
Сериализация/Десериализация(парсинг) - превращения кода js в объект для передачи
WebWorker - отдельный поток
LESS - библиотека для упрощения написания css правил
API (интерфейс программирования приложений, интерфейс прикладного программирования)


SCRUM:

User Stories -  это первый и основной способ выявить потребности и нужды пользователя, для которого пишется конкретный продукт.
	Independent Независимость истории (одна от другой не зависит)
	Negotiable Обсуждаемость истории (истории имеют значение для разрабочиков)
	Valuable Ценность (ценность для клиента)
	Estimable оцениваемость (история должна иметь возможность )
	Testable тестируемость (история должна быть тестируемой)
	Small (должна влазить в один спринт)
Product Backlog -  является списком требований, историй, функциональности, которые упорядочены по степени важности.
Story Point - единица времени
Spike (в us) - исследовательская история, целью которой является изучение новой предметной области одним или несколькими разработчиками
Epic - большая user story
Product Owner -
Scrum Master -


Aginle = семейство методологий в которую входит скрам

Grooming - наведение порядка в беклоге, подготовка всех задач к следующему спринту
Agile Manifesto - основной документ, содержащий описание ценностей и принципов гибкой разработки программного обеспечения
Kanban - это жесткое ограничение числа одновременно выполняемых задач.

фокус фактор последнего спринта- действительная производительность / доступные человеко-часы


Burndown chart - сколько работы уже сделано, и сколько осталось
Velosity - скорость комманды, высчитывается на стории
Demo - Демонстрация результатов
Retrospective - Проводится после демо, делаются выводы
